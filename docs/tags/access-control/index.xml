<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>access-control on Just another Jedi...</title>
    <link>https://pcolladosoto.github.io/tags/access-control/</link>
    <description>Recent content in access-control on Just another Jedi...</description>
    <image>
      <title>Just another Jedi...</title>
      <url>https://pcolladosoto.github.io/me.png</url>
      <link>https://pcolladosoto.github.io/me.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 13 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://pcolladosoto.github.io/tags/access-control/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Controlling access through a WireGuard VPN</title>
      <link>https://pcolladosoto.github.io/posts/wg-acl/</link>
      <pubDate>Sun, 13 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://pcolladosoto.github.io/posts/wg-acl/</guid>
      <description>Why would we want to control access to a machine? In an ideal world, we wouldn&amp;rsquo;t need to protect our own machines: nobody would try to break into them in the first place.
The truth, however, is that we should always control who can access our servers and computers when we expose them publicly. Let&amp;rsquo;s take a look at a common scenario.
Securing SSH When setting up servers we usually leave port 22 open: that&amp;rsquo;s where the SSH daemon (i.</description>
    </item>
    
  </channel>
</rss>
